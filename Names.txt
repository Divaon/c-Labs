//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop
#include <math.h>
#include "Unit19.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm19 *Form19;
//---------------------------------------------------------------------------
__fastcall TForm19::TForm19(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------
void __fastcall TForm19::Button1Click(TObject *Sender)
{
double xx=300,yy=300,x=300,y=300,wdth=100,a=360/4,b=360/10,m[5][2];
double cosa=cos(b*(M_PI/180)),
	   sina=sin(b*(M_PI/180));
int it=0;
	Canvas->Pen->Color=clRed;
	Canvas->MoveTo(x,y);
   for (double i=0; i <5; i++) {
	   Canvas->LineTo(xx+wdth*sin(i/57.4*a),yy+wdth*cos(i/57.4*a)) ;
	   m[it][0]=xx=xx+wdth*sin(i/57.4*a)  ;
		m[it][1]=yy=yy+wdth*cos(i/57.4*a )  ;
		it=it+1;
	 }
		 it=0;
double xx=300,yy=300,x=300,y=300,wdth=100,a=360/4,b=360/360,m[5][2];
double cosa=cos(b*(M_PI/180)),
	   sina=sin(b*(M_PI/180)),
		sinb=sin(a*(M_PI/180)),
		 cosb=cos(a*(M_PI/180));
int it=0;
	m[0][0]=x;
	m[0][1]=y;
	Canvas->Pen->Color=clRed;
	Canvas->MoveTo(x,y);
	for(it=0;it<4;it++)
	{
	m[it+1][0]=m[it][0]+100*sinb ;
	m[it+1][1]=m[it][1]+100*cosb ;
	Sleep(200)  ;
	}

   /*	m[0][0]=x;
	m[0][1]=y;
	m[1][0]=x+100;
	m[1][1]=y;
	m[2][0]=x+100;
	m[2][1]=y+100;
	m[3][0]=x;
	m[3][1]=y+100;
	m[4][0]=x;
	m[4][1]=y; */
	Canvas->LineTo(m[1][0],m[1][1]);
	Sleep(200)  ;
	Canvas->LineTo(m[2][0],m[2][1]);
	Sleep(200)  ;
	Canvas->LineTo(m[3][0],m[3][1]);
	Sleep(200)  ;
	Canvas->LineTo(m[4][0],m[4][1]);
	Sleep(2000)  ;


for (double ii=1; ii < 60; ii++) {
for (int t=0; t < 5; t++)
 {
	  m[t][0]=(m[t][0]-350)*cosa-(m[t][1]-350)*sina+350;
	  m[t][0]= m[t][0]*1.000005;
	 m[t][1]=(m[t][0]-350)*sina+(m[t][1]-350)*cosa+350;
	  m[t][1]= m[t][1]*1.000005;
	   }
	 Canvas->MoveTo(m[0][0],m[0][1]);
	 Sleep(20)  ;
	 Repaint();
		for (int i = 0; i < 5; i++) {
			   Canvas->LineTo(m[i][0],m[i][1]);
		}

	   Canvas->LineTo(m[0][0],m[0][1]) ;

	 }
